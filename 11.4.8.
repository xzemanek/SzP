#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define BOUNDARY_REACHED 1;
#define LOWL_SUCCESS 0;
#define LOWL_OK 0;
#define LOWL_FAIL 1;

typedef struct OWN
{
  float data;
  struct OWN *next;
}OWN;

typedef struct LOWL
{
  OWN *beg;
  OWN *cur;
}

/*
LOWL *lowl_create_random(unsigned int size)
void lowl_destroy(LOWL *list)
void lowl_print(LOWL *list)
char lowl_cur_step_left(LOWL *list)
char lowl_cur_step_right(LOWL *list)
OWN *lowl_insert_left(LOWL* list, float val)
OWN *lowl_insert_right(LOWL* list, float val)
char lowl_delete(LOWL* list)
char lowl_interpolate_linear(LOWL *list)
*/

LOWL *lowl_create_empty(void);
{
	LOWL *rtrn;
  
  rtrn->beg=NULL;
  rtrn->cur=NULL;
  
  rtrn=(LOWL *)malloc(sizeof(LOWL *))
  if(rtrn==NULL)
  {
    return NULL;
  }
  
  return rtrn;
}

char lowl_cur_step_left(LOWL *list)
{
	if(list->cur==list->beg)
	{
		return BOUNDARY_REACHED;
	}
	OWN *leftN=list->beg;
	while(leftN->next != list->cur)
	{
		leftN=leftN->next;
	}
	list->cur=leftN;
	return LOWL_SUCESS;
}


int main()
{
}
